// <auto-generated>
// This code was generated by the UnitCodeGenerator tool
//
// Changes to this file will be lost if the code is regenerated
// </auto-generated>

class BitsPerSecond {
	static double toKiloBitsPerSecond(double value) =>
		value / 1000.0;
	static double toMegaBitsPerSecond(double value) =>
		value / 1e+6;
	static double toGigaBitsPerSecond(double value) =>
		value / 1e+9;
	static double toTeraBitsPerSecond(double value) =>
		value / 1e+12;
	static double toKiloBytesPerSecond(double value) =>
		value / 8000.0;
	static double toMegaBytesPerSecond(double value) =>
		value / 8e+6;
	static double toGigaBytesPerSecond(double value) =>
		value / 8e+9;
	static double toTeraBytesPerSecond(double value) =>
		value / 8e+12;
	static double toKibibitsPerSecond(double value) =>
		value / 1024.0;
	static double toMebibitsPerSecond(double value) =>
		value / 1048576.0;
}

class GigaBitsPerSecond {
	static double toBitsPerSecond(double value) =>
		value * 1e+9;
	static double toKiloBitsPerSecond(double value) =>
		value * 1e+6;
	static double toMegaBitsPerSecond(double value) =>
		value * 1000.0;
	static double toTeraBitsPerSecond(double value) =>
		value / 1000.0;
	static double toKiloBytesPerSecond(double value) =>
		value * 125000.0;
	static double toMegaBytesPerSecond(double value) =>
		value * 125.0;
	static double toGigaBytesPerSecond(double value) =>
		value / 8.0;
	static double toTeraBytesPerSecond(double value) =>
		value / 8000.0;
	static double toKibibitsPerSecond(double value) =>
		value * 976562.5;
	static double toMebibitsPerSecond(double value) =>
		value * 953.67431640625;
}

class GigaBytesPerSecond {
	static double toBitsPerSecond(double value) =>
		value * 8e+9;
	static double toKiloBitsPerSecond(double value) =>
		value * 8e+6;
	static double toMegaBitsPerSecond(double value) =>
		value * 8000.0;
	static double toGigaBitsPerSecond(double value) =>
		value * 8.0;
	static double toTeraBitsPerSecond(double value) =>
		value / 125.0;
	static double toKiloBytesPerSecond(double value) =>
		value * 1e+6;
	static double toMegaBytesPerSecond(double value) =>
		value * 1000.0;
	static double toTeraBytesPerSecond(double value) =>
		value / 1000.0;
	static double toKibibitsPerSecond(double value) =>
		value * 7812500.0;
	static double toMebibitsPerSecond(double value) =>
		value * 7629.39;
}

class KibibitsPerSecond {
	static double toBitsPerSecond(double value) =>
		value * 1024.0;
	static double toKiloBitsPerSecond(double value) =>
		value * 1.024;
	static double toMegaBitsPerSecond(double value) =>
		value / 976.563;
	static double toGigaBitsPerSecond(double value) =>
		value / 976562.5;
	static double toTeraBitsPerSecond(double value) =>
		value / 976562500.0;
	static double toKiloBytesPerSecond(double value) =>
		value / 7.8125;
	static double toMegaBytesPerSecond(double value) =>
		value / 7812.5;
	static double toGigaBytesPerSecond(double value) =>
		value / 7812500.0;
	static double toTeraBytesPerSecond(double value) =>
		value / 7812500000.0;
	static double toMebibitsPerSecond(double value) =>
		value / 1024.0;
}

class KiloBitsPerSecond {
	static double toBitsPerSecond(double value) =>
		value * 1000.0;
	static double toMegaBitsPerSecond(double value) =>
		value / 1000.0;
	static double toGigaBitsPerSecond(double value) =>
		value / 1e+6;
	static double toTeraBitsPerSecond(double value) =>
		value / 1e+9;
	static double toKiloBytesPerSecond(double value) =>
		value / 8.0;
	static double toMegaBytesPerSecond(double value) =>
		value / 8000.0;
	static double toGigaBytesPerSecond(double value) =>
		value / 8e+6;
	static double toTeraBytesPerSecond(double value) =>
		value / 8e+9;
	static double toKibibitsPerSecond(double value) =>
		value / 1.024;
	static double toMebibitsPerSecond(double value) =>
		value / 1048.58;
}

class KiloBytesPerSecond {
	static double toBitsPerSecond(double value) =>
		value * 8000.0;
	static double toKiloBitsPerSecond(double value) =>
		value * 8.0;
	static double toMegaBitsPerSecond(double value) =>
		value / 125.0;
	static double toGigaBitsPerSecond(double value) =>
		value / 125000.0;
	static double toTeraBitsPerSecond(double value) =>
		value / 1.25e+8;
	static double toMegaBytesPerSecond(double value) =>
		value / 1000.0;
	static double toGigaBytesPerSecond(double value) =>
		value / 1e+6;
	static double toTeraBytesPerSecond(double value) =>
		value / 1e+9;
	static double toKibibitsPerSecond(double value) =>
		value * 7.8125;
	static double toMebibitsPerSecond(double value) =>
		value * 0.00762939;
}

class MebibitsPerSecond {
	static double toBitsPerSecond(double value) =>
		value * 1048576.0;
	static double toKiloBitsPerSecond(double value) =>
		value * 1048.58;
	static double toMegaBitsPerSecond(double value) =>
		value * 1.04858;
	static double toGigaBitsPerSecond(double value) =>
		value / 953.67431640625;
	static double toTeraBitsPerSecond(double value) =>
		value / 953674.0;
	static double toKiloBytesPerSecond(double value) =>
		value / 0.00762939;
	static double toMegaBytesPerSecond(double value) =>
		value / 7.62939;
	static double toGigaBytesPerSecond(double value) =>
		value / 7629.39;
	static double toTeraBytesPerSecond(double value) =>
		value * 0.000000131072;
	static double toKibibitsPerSecond(double value) =>
		value * 1024.0;
}

class MegaBitsPerSecond {
	static double toBitsPerSecond(double value) =>
		value * 1e+6;
	static double toKiloBitsPerSecond(double value) =>
		value * 1000.0;
	static double toGigaBitsPerSecond(double value) =>
		value / 1000.0;
	static double toTeraBitsPerSecond(double value) =>
		value / 1e+6;
	static double toKiloBytesPerSecond(double value) =>
		value * 125.0;
	static double toMegaBytesPerSecond(double value) =>
		value / 8.0;
	static double toGigaBytesPerSecond(double value) =>
		value / 8000.0;
	static double toTeraBytesPerSecond(double value) =>
		value / 8e+6;
	static double toKibibitsPerSecond(double value) =>
		value * 976.563;
	static double toMebibitsPerSecond(double value) =>
		value / 1.04858;
}

class MegaBytesPerSecond {
	static double toBitsPerSecond(double value) =>
		value * 8e+6;
	static double toKiloBitsPerSecond(double value) =>
		value * 8000.0;
	static double toMegaBitsPerSecond(double value) =>
		value * 8.0;
	static double toGigaBitsPerSecond(double value) =>
		value / 125.0;
	static double toTeraBitsPerSecond(double value) =>
		value / 125000.0;
	static double toKiloBytesPerSecond(double value) =>
		value * 1000.0;
	static double toGigaBytesPerSecond(double value) =>
		value / 1000.0;
	static double toTeraBytesPerSecond(double value) =>
		value / 1e+6;
	static double toKibibitsPerSecond(double value) =>
		value * 7812.5;
	static double toMebibitsPerSecond(double value) =>
		value * 7.62939;
}

class TeraBitsPerSecond {
	static double toBitsPerSecond(double value) =>
		value * 1e+12;
	static double toKiloBitsPerSecond(double value) =>
		value * 1e+9;
	static double toMegaBitsPerSecond(double value) =>
		value * 1e+6;
	static double toGigaBitsPerSecond(double value) =>
		value * 1000.0;
	static double toKiloBytesPerSecond(double value) =>
		value * 1.25e+8;
	static double toMegaBytesPerSecond(double value) =>
		value * 125000.0;
	static double toGigaBytesPerSecond(double value) =>
		value * 125.0;
	static double toTeraBytesPerSecond(double value) =>
		value / 8.0;
	static double toKibibitsPerSecond(double value) =>
		value * 976562500.0;
	static double toMebibitsPerSecond(double value) =>
		value * 953674.0;
}

class TeraBytesPerSecond {
	static double toBitsPerSecond(double value) =>
		value * 8e+12;
	static double toKiloBitsPerSecond(double value) =>
		value * 8e+9;
	static double toMegaBitsPerSecond(double value) =>
		value * 8e+6;
	static double toGigaBitsPerSecond(double value) =>
		value * 8000.0;
	static double toTeraBitsPerSecond(double value) =>
		value * 8.0;
	static double toKiloBytesPerSecond(double value) =>
		value * 1e+9;
	static double toMegaBytesPerSecond(double value) =>
		value * 1e+6;
	static double toGigaBytesPerSecond(double value) =>
		value * 1000.0;
	static double toKibibitsPerSecond(double value) =>
		value * 7812500000.0;
	static double toMebibitsPerSecond(double value) =>
		value / 0.000000131072;
}
