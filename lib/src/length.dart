// <auto-generated>
// This code was generated by the UnitCodeGenerator tool
//
// Changes to this file will be lost if the code is regenerated
// </auto-generated>

class Centimetres {
	static double toMillimetres(double value) =>
		value * 10.0;
	static double toMetres(double value) =>
		value / 100.0;
	static double toKilometres(double value) =>
		value / 100000.0;
	static double toInches(double value) =>
		value / 2.54;
	static double toFeet(double value) =>
		value / 30.48;
	static double toYards(double value) =>
		value / 91.44;
	static double toMiles(double value) =>
		value / 160934.4;
	static double toNauticalMiles(double value) =>
		value / 185200.0;
}

class Feet {
	static double toMillimetres(double value) =>
		value * 304.8;
	static double toCentimetres(double value) =>
		value * 30.48;
	static double toMetres(double value) =>
		value * 0.3048;
	static double toKilometres(double value) =>
		value * 0.0003048;
	static double toInches(double value) =>
		value * 12.0;
	static double toYards(double value) =>
		value / 3.0;
	static double toMiles(double value) =>
		value / 5280.0;
	static double toNauticalMiles(double value) =>
		value / 6076.12;
}

class Inches {
	static double toMillimetres(double value) =>
		value * 25.4;
	static double toCentimetres(double value) =>
		value * 2.54;
	static double toMetres(double value) =>
		value / 39.37007874;
	static double toKilometres(double value) =>
		value / 39370.07874;
	static double toFeet(double value) =>
		value / 12.0;
	static double toYards(double value) =>
		value / 36.0;
	static double toMiles(double value) =>
		value / 63360.0;
	static double toNauticalMiles(double value) =>
		value / 72913.4;
}

class Kilometres {
	static double toMillimetres(double value) =>
		value * 1000000.0;
	static double toCentimetres(double value) =>
		value * 100000.0;
	static double toMetres(double value) =>
		value * 1000.0;
	static double toInches(double value) =>
		value * 39370.07874;
	static double toFeet(double value) =>
		value / 0.0003048;
	static double toYards(double value) =>
		value / 0.0009144;
	static double toMiles(double value) =>
		value / 1.609344;
	static double toNauticalMiles(double value) =>
		value / 1.85200;
}

class Metres {
	static double toMillimetres(double value) =>
		value * 1000.0;
	static double toCentimetres(double value) =>
		value * 100.0;
	static double toKilometres(double value) =>
		value / 1000.0;
	static double toInches(double value) =>
		value * 39.37007874;
	static double toFeet(double value) =>
		value / 0.3048;
	static double toYards(double value) =>
		value / 0.9144;
	static double toMiles(double value) =>
		value / 1609.344;
	static double toNauticalMiles(double value) =>
		value / 1852.0;
}

class Miles {
	static double toMillimetres(double value) =>
		value * 1609344.0;
	static double toCentimetres(double value) =>
		value * 160934.4;
	static double toMetres(double value) =>
		value * 1609.344;
	static double toKilometres(double value) =>
		value * 1.609344;
	static double toInches(double value) =>
		value * 63360.0;
	static double toFeet(double value) =>
		value * 5280.0;
	static double toYards(double value) =>
		value * 1760.0;
	static double toNauticalMiles(double value) =>
		value / 1.15078;
}

class Millimetres {
	static double toCentimetres(double value) =>
		value / 10.0;
	static double toMetres(double value) =>
		value / 1000.0;
	static double toKilometres(double value) =>
		value / 1000000.0;
	static double toInches(double value) =>
		value / 25.4;
	static double toFeet(double value) =>
		value / 304.8;
	static double toYards(double value) =>
		value / 914.4;
	static double toMiles(double value) =>
		value / 1609344.0;
	static double toNauticalMiles(double value) =>
		value / 1852000.0;
}

class NauticalMiles {
	static double toMillimetres(double value) =>
		value * 1852000.0;
	static double toCentimetres(double value) =>
		value * 185200.0;
	static double toMetres(double value) =>
		value * 1852.0;
	static double toKilometres(double value) =>
		value * 1.85200;
	static double toInches(double value) =>
		value * 72913.4;
	static double toFeet(double value) =>
		value * 6076.12;
	static double toYards(double value) =>
		value * 2025.37;
	static double toMiles(double value) =>
		value * 1.15078;
}

class Yards {
	static double toMillimetres(double value) =>
		value * 914.4;
	static double toCentimetres(double value) =>
		value * 91.44;
	static double toMetres(double value) =>
		value * 0.9144;
	static double toKilometres(double value) =>
		value * 0.0009144;
	static double toInches(double value) =>
		value * 36.0;
	static double toFeet(double value) =>
		value * 3.0;
	static double toMiles(double value) =>
		value / 1760.0;
	static double toNauticalMiles(double value) =>
		value / 2025.37;
}
