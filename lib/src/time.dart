// <auto-generated>
// This code was generated by the UnitCodeGenerator tool
//
// Changes to this file will be lost if the code is regenerated
// </auto-generated>

/// Centuries conversion functions
class Centuries {
	Centuries._() {}
	/// Converts the supplied Centuries value to Nanoseconds
	static double toNanoseconds(double value) =>
		value * 3.154e+18;
	/// Converts the supplied Centuries value to Microseconds
	static double toMicroseconds(double value) =>
		value * 3.154e+15;
	/// Converts the supplied Centuries value to Milliseconds
	static double toMilliseconds(double value) =>
		value * 3.154e+12;
	/// Converts the supplied Centuries value to Seconds
	static double toSeconds(double value) =>
		value * 3.154e+9;
	/// Converts the supplied Centuries value to Minutes
	static double toMinutes(double value) =>
		value * 5.256e+7;
	/// Converts the supplied Centuries value to Hours
	static double toHours(double value) =>
		value * 876000.0;
	/// Converts the supplied Centuries value to Days
	static double toDays(double value) =>
		value * 36500.0;
	/// Converts the supplied Centuries value to Weeks
	static double toWeeks(double value) =>
		value * 5214.29;
	/// Converts the supplied Centuries value to Months
	static double toMonths(double value) =>
		value * 1200.0;
	/// Converts the supplied Centuries value to Years
	static double toYears(double value) =>
		value * 100.0;
	/// Converts the supplied Centuries value to Decades
	static double toDecades(double value) =>
		value * 10.0;
}

/// Days conversion functions
class Days {
	Days._() {}
	/// Converts the supplied Days value to Nanoseconds
	static double toNanoseconds(double value) =>
		value * 8.64e+13;
	/// Converts the supplied Days value to Microseconds
	static double toMicroseconds(double value) =>
		value * 8.64e+10;
	/// Converts the supplied Days value to Milliseconds
	static double toMilliseconds(double value) =>
		value * 8.64e+7;
	/// Converts the supplied Days value to Seconds
	static double toSeconds(double value) =>
		value * 86400.0;
	/// Converts the supplied Days value to Minutes
	static double toMinutes(double value) =>
		value * 1440.0;
	/// Converts the supplied Days value to Hours
	static double toHours(double value) =>
		value * 24.0;
	/// Converts the supplied Days value to Weeks
	static double toWeeks(double value) =>
		value / 7.0;
	/// Converts the supplied Days value to Months
	static double toMonths(double value) =>
		value / 30.4167;
	/// Converts the supplied Days value to Years
	static double toYears(double value) =>
		value / 365.0;
	/// Converts the supplied Days value to Decades
	static double toDecades(double value) =>
		value / 3650.0;
	/// Converts the supplied Days value to Centuries
	static double toCenturies(double value) =>
		value / 36500.0;
}

/// Decades conversion functions
class Decades {
	Decades._() {}
	/// Converts the supplied Decades value to Nanoseconds
	static double toNanoseconds(double value) =>
		value * 3.154e+17;
	/// Converts the supplied Decades value to Microseconds
	static double toMicroseconds(double value) =>
		value * 3.154e+14;
	/// Converts the supplied Decades value to Milliseconds
	static double toMilliseconds(double value) =>
		value * 3.154e+11;
	/// Converts the supplied Decades value to Seconds
	static double toSeconds(double value) =>
		value * 3.154e+8;
	/// Converts the supplied Decades value to Minutes
	static double toMinutes(double value) =>
		value * 5.256e+6;
	/// Converts the supplied Decades value to Hours
	static double toHours(double value) =>
		value * 87600.0;
	/// Converts the supplied Decades value to Days
	static double toDays(double value) =>
		value * 3650.0;
	/// Converts the supplied Decades value to Weeks
	static double toWeeks(double value) =>
		value * 521.429;
	/// Converts the supplied Decades value to Months
	static double toMonths(double value) =>
		value * 120.0;
	/// Converts the supplied Decades value to Years
	static double toYears(double value) =>
		value * 10.0;
	/// Converts the supplied Decades value to Centuries
	static double toCenturies(double value) =>
		value / 10.0;
}

/// Hours conversion functions
class Hours {
	Hours._() {}
	/// Converts the supplied Hours value to Nanoseconds
	static double toNanoseconds(double value) =>
		value * 3.6e+12;
	/// Converts the supplied Hours value to Microseconds
	static double toMicroseconds(double value) =>
		value * 3.6e+9;
	/// Converts the supplied Hours value to Milliseconds
	static double toMilliseconds(double value) =>
		value * 3.6e+6;
	/// Converts the supplied Hours value to Seconds
	static double toSeconds(double value) =>
		value * 3600.0;
	/// Converts the supplied Hours value to Minutes
	static double toMinutes(double value) =>
		value * 60.0;
	/// Converts the supplied Hours value to Days
	static double toDays(double value) =>
		value / 24.0;
	/// Converts the supplied Hours value to Weeks
	static double toWeeks(double value) =>
		value / 168.0;
	/// Converts the supplied Hours value to Months
	static double toMonths(double value) =>
		value / 730.001;
	/// Converts the supplied Hours value to Years
	static double toYears(double value) =>
		value / 8760.0;
	/// Converts the supplied Hours value to Decades
	static double toDecades(double value) =>
		value / 87600.0;
	/// Converts the supplied Hours value to Centuries
	static double toCenturies(double value) =>
		value / 876000.0;
}

/// Microseconds conversion functions
class Microseconds {
	Microseconds._() {}
	/// Converts the supplied Microseconds value to Nanoseconds
	static double toNanoseconds(double value) =>
		value * 1000.0;
	/// Converts the supplied Microseconds value to Milliseconds
	static double toMilliseconds(double value) =>
		value / 1000.0;
	/// Converts the supplied Microseconds value to Seconds
	static double toSeconds(double value) =>
		value / 1e+6;
	/// Converts the supplied Microseconds value to Minutes
	static double toMinutes(double value) =>
		value / 6e+7;
	/// Converts the supplied Microseconds value to Hours
	static double toHours(double value) =>
		value / 3.6e+9;
	/// Converts the supplied Microseconds value to Days
	static double toDays(double value) =>
		value / 8.64e+10;
	/// Converts the supplied Microseconds value to Weeks
	static double toWeeks(double value) =>
		value / 6.048e+11;
	/// Converts the supplied Microseconds value to Months
	static double toMonths(double value) =>
		value / 2629746000000.0;
	/// Converts the supplied Microseconds value to Years
	static double toYears(double value) =>
		value / 3.154e+13;
	/// Converts the supplied Microseconds value to Decades
	static double toDecades(double value) =>
		value / 3.154e+14;
	/// Converts the supplied Microseconds value to Centuries
	static double toCenturies(double value) =>
		value / 3.154e+15;
}

/// Milliseconds conversion functions
class Milliseconds {
	Milliseconds._() {}
	/// Converts the supplied Milliseconds value to Nanoseconds
	static double toNanoseconds(double value) =>
		value * 1e+6;
	/// Converts the supplied Milliseconds value to Microseconds
	static double toMicroseconds(double value) =>
		value * 1000.0;
	/// Converts the supplied Milliseconds value to Seconds
	static double toSeconds(double value) =>
		value / 1000.0;
	/// Converts the supplied Milliseconds value to Minutes
	static double toMinutes(double value) =>
		value / 60000.0;
	/// Converts the supplied Milliseconds value to Hours
	static double toHours(double value) =>
		value / 3.6e+6;
	/// Converts the supplied Milliseconds value to Days
	static double toDays(double value) =>
		value / 8.64e+7;
	/// Converts the supplied Milliseconds value to Weeks
	static double toWeeks(double value) =>
		value / 6.048e+8;
	/// Converts the supplied Milliseconds value to Months
	static double toMonths(double value) =>
		value / 2629746000.0;
	/// Converts the supplied Milliseconds value to Years
	static double toYears(double value) =>
		value / 31556952000.0;
	/// Converts the supplied Milliseconds value to Decades
	static double toDecades(double value) =>
		value / 3.154e+11;
	/// Converts the supplied Milliseconds value to Centuries
	static double toCenturies(double value) =>
		value / 3.154e+12;
}

/// Minutes conversion functions
class Minutes {
	Minutes._() {}
	/// Converts the supplied Minutes value to Nanoseconds
	static double toNanoseconds(double value) =>
		value * 6e+10;
	/// Converts the supplied Minutes value to Microseconds
	static double toMicroseconds(double value) =>
		value * 6e+7;
	/// Converts the supplied Minutes value to Milliseconds
	static double toMilliseconds(double value) =>
		value * 60000.0;
	/// Converts the supplied Minutes value to Seconds
	static double toSeconds(double value) =>
		value * 60.0;
	/// Converts the supplied Minutes value to Hours
	static double toHours(double value) =>
		value / 60.0;
	/// Converts the supplied Minutes value to Days
	static double toDays(double value) =>
		value / 1440.0;
	/// Converts the supplied Minutes value to Weeks
	static double toWeeks(double value) =>
		value / 10080.0;
	/// Converts the supplied Minutes value to Months
	static double toMonths(double value) =>
		value / 43800.0;
	/// Converts the supplied Minutes value to Years
	static double toYears(double value) =>
		value / 525600.0;
	/// Converts the supplied Minutes value to Decades
	static double toDecades(double value) =>
		value / 5.256e+6;
	/// Converts the supplied Minutes value to Centuries
	static double toCenturies(double value) =>
		value / 5.256e+7;
}

/// Months conversion functions
class Months {
	Months._() {}
	/// Converts the supplied Months value to Nanoseconds
	static double toNanoseconds(double value) =>
		value * 2629746000000000.0;
	/// Converts the supplied Months value to Microseconds
	static double toMicroseconds(double value) =>
		value * 2629746000000.0;
	/// Converts the supplied Months value to Milliseconds
	static double toMilliseconds(double value) =>
		value * 2629746000.0;
	/// Converts the supplied Months value to Seconds
	static double toSeconds(double value) =>
		value * 2.628e+6;
	/// Converts the supplied Months value to Minutes
	static double toMinutes(double value) =>
		value * 43800.0;
	/// Converts the supplied Months value to Hours
	static double toHours(double value) =>
		value * 730.001;
	/// Converts the supplied Months value to Days
	static double toDays(double value) =>
		value * 30.4167;
	/// Converts the supplied Months value to Weeks
	static double toWeeks(double value) =>
		value * 4.34524;
	/// Converts the supplied Months value to Years
	static double toYears(double value) =>
		value / 12.0;
	/// Converts the supplied Months value to Decades
	static double toDecades(double value) =>
		value / 120.0;
	/// Converts the supplied Months value to Centuries
	static double toCenturies(double value) =>
		value / 1200.0;
}

/// Nanoseconds conversion functions
class Nanoseconds {
	Nanoseconds._() {}
	/// Converts the supplied Nanoseconds value to Microseconds
	static double toMicroseconds(double value) =>
		value / 1000.0;
	/// Converts the supplied Nanoseconds value to Milliseconds
	static double toMilliseconds(double value) =>
		value / 1e+6;
	/// Converts the supplied Nanoseconds value to Seconds
	static double toSeconds(double value) =>
		value / 1e+9;
	/// Converts the supplied Nanoseconds value to Minutes
	static double toMinutes(double value) =>
		value / 6e+10;
	/// Converts the supplied Nanoseconds value to Hours
	static double toHours(double value) =>
		value / 3.6e+12;
	/// Converts the supplied Nanoseconds value to Days
	static double toDays(double value) =>
		value / 8.64e+13;
	/// Converts the supplied Nanoseconds value to Weeks
	static double toWeeks(double value) =>
		value / 6.048e+14;
	/// Converts the supplied Nanoseconds value to Months
	static double toMonths(double value) =>
		value / 2629746000000000.0;
	/// Converts the supplied Nanoseconds value to Years
	static double toYears(double value) =>
		value / 3.154e+16;
	/// Converts the supplied Nanoseconds value to Decades
	static double toDecades(double value) =>
		value / 3.154e+17;
	/// Converts the supplied Nanoseconds value to Centuries
	static double toCenturies(double value) =>
		value / 3.154e+18;
}

/// Seconds conversion functions
class Seconds {
	Seconds._() {}
	/// Converts the supplied Seconds value to Nanoseconds
	static double toNanoseconds(double value) =>
		value * 1e+9;
	/// Converts the supplied Seconds value to Microseconds
	static double toMicroseconds(double value) =>
		value * 1e+6;
	/// Converts the supplied Seconds value to Milliseconds
	static double toMilliseconds(double value) =>
		value * 1000.0;
	/// Converts the supplied Seconds value to Minutes
	static double toMinutes(double value) =>
		value / 60.0;
	/// Converts the supplied Seconds value to Hours
	static double toHours(double value) =>
		value / 3600.0;
	/// Converts the supplied Seconds value to Days
	static double toDays(double value) =>
		value / 86400.0;
	/// Converts the supplied Seconds value to Weeks
	static double toWeeks(double value) =>
		value / 604800.0;
	/// Converts the supplied Seconds value to Months
	static double toMonths(double value) =>
		value / 2.628e+6;
	/// Converts the supplied Seconds value to Years
	static double toYears(double value) =>
		value / 3.1536e+7;
	/// Converts the supplied Seconds value to Decades
	static double toDecades(double value) =>
		value / 3.154e+8;
	/// Converts the supplied Seconds value to Centuries
	static double toCenturies(double value) =>
		value / 3.154e+9;
}

/// Weeks conversion functions
class Weeks {
	Weeks._() {}
	/// Converts the supplied Weeks value to Nanoseconds
	static double toNanoseconds(double value) =>
		value * 6.048e+14;
	/// Converts the supplied Weeks value to Microseconds
	static double toMicroseconds(double value) =>
		value * 6.048e+11;
	/// Converts the supplied Weeks value to Milliseconds
	static double toMilliseconds(double value) =>
		value * 6.048e+8;
	/// Converts the supplied Weeks value to Seconds
	static double toSeconds(double value) =>
		value * 604800.0;
	/// Converts the supplied Weeks value to Minutes
	static double toMinutes(double value) =>
		value * 10080.0;
	/// Converts the supplied Weeks value to Hours
	static double toHours(double value) =>
		value * 168.0;
	/// Converts the supplied Weeks value to Days
	static double toDays(double value) =>
		value * 7.0;
	/// Converts the supplied Weeks value to Months
	static double toMonths(double value) =>
		value / 4.34524;
	/// Converts the supplied Weeks value to Years
	static double toYears(double value) =>
		value / 52.143;
	/// Converts the supplied Weeks value to Decades
	static double toDecades(double value) =>
		value / 521.429;
	/// Converts the supplied Weeks value to Centuries
	static double toCenturies(double value) =>
		value / 5214.29;
}

/// Years conversion functions
class Years {
	Years._() {}
	/// Converts the supplied Years value to Nanoseconds
	static double toNanoseconds(double value) =>
		value * 3.154e+16;
	/// Converts the supplied Years value to Microseconds
	static double toMicroseconds(double value) =>
		value * 3.154e+13;
	/// Converts the supplied Years value to Milliseconds
	static double toMilliseconds(double value) =>
		value * 31556952000.0;
	/// Converts the supplied Years value to Seconds
	static double toSeconds(double value) =>
		value * 3.1536e+7;
	/// Converts the supplied Years value to Minutes
	static double toMinutes(double value) =>
		value * 525600.0;
	/// Converts the supplied Years value to Hours
	static double toHours(double value) =>
		value * 8760.0;
	/// Converts the supplied Years value to Days
	static double toDays(double value) =>
		value * 365.0;
	/// Converts the supplied Years value to Weeks
	static double toWeeks(double value) =>
		value * 52.143;
	/// Converts the supplied Years value to Months
	static double toMonths(double value) =>
		value * 12.0;
	/// Converts the supplied Years value to Decades
	static double toDecades(double value) =>
		value / 10.0;
	/// Converts the supplied Years value to Centuries
	static double toCenturies(double value) =>
		value / 100.0;
}
