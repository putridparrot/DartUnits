// <auto-generated>
// This code was generated by the UnitCodeGenerator tool
//
// Changes to this file will be lost if the code is regenerated
// </auto-generated>

import 'dart:math' as math;

class Degrees {
	static double toRadians(double value) =>
		value * math.pi/180.0;
	static double toGradians(double value) =>
		value * 200.0/180.0;
	static double toMilliradians(double value) =>
		value * (1000.0 * math.pi)/180.0;
	static double toMinuteOfArc(double value) =>
		value * 60.0;
	static double toSecondsOfArc(double value) =>
		value * 3600.0;
}

class Gradians {
	static double toDegrees(double value) =>
		value * 180.0/200.0;
	static double toRadians(double value) =>
		value * math.pi/200.0;
	static double toMilliradians(double value) =>
		value * (1000.0*math.pi)/200.0;
	static double toMinuteOfArc(double value) =>
		value * 54.0;
	static double toSecondsOfArc(double value) =>
		value * 3240.0;
}

class Milliradians {
	static double toDegrees(double value) =>
		value * 180.0/(1000.0 * math.pi);
	static double toRadians(double value) =>
		value / 1000.0;
	static double toGradians(double value) =>
		value * 200.0/(1000.0 * math.pi);
	static double toMinuteOfArc(double value) =>
		value * (60.0 * 180.0)/(1000.0 * math.pi);
	static double toSecondsOfArc(double value) =>
		value * (3600.0 * 180.0)/(1000.0 * math.pi);
}

class MinuteOfArc {
	static double toDegrees(double value) =>
		value / 60.0;
	static double toRadians(double value) =>
		value * math.pi/(60.0 * 180.0);
	static double toGradians(double value) =>
		value / 54.0;
	static double toMilliradians(double value) =>
		value * (1000.0 * math.pi) / (60.0 * 180.0);
	static double toSecondsOfArc(double value) =>
		value * 60.0;
}

class Radians {
	static double toDegrees(double value) =>
		value * 180.0/math.pi;
	static double toGradians(double value) =>
		value * 200.0/math.pi;
	static double toMilliradians(double value) =>
		value * 1000.0;
	static double toMinuteOfArc(double value) =>
		value * (60.0 * 180.0)/math.pi;
	static double toSecondsOfArc(double value) =>
		value * (3600.0 * 180.0)/math.pi;
}

class SecondsOfArc {
	static double toDegrees(double value) =>
		value / 3600.0;
	static double toRadians(double value) =>
		value * math.pi/(180.0 * 3600.0);
	static double toGradians(double value) =>
		value / 3240.0;
	static double toMilliradians(double value) =>
		value * (1000.0 * math.pi) / (180.0 * 3600.0);
	static double toMinuteOfArc(double value) =>
		value / 60.0;
}
